{"version":3,"file":"static/js/486.617e1cb7.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm .jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.IsLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return filter\n      ? contacts.filter(({ name }) =>\n          name.toLowerCase().includes(filter.toLowerCase())\n        )\n      : contacts;\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"deleteBtn\":\"ContactItem_deleteBtn__fTo+a\",\"icon\":\"ContactItem_icon__qzINN\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { ImCancelCircle } from 'react-icons/im';\nimport { deleteContact } from 'redux/contacts/contactsThunks';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <li className={css.item}>\n        <span>{name}</span>\n        <span>{number}</span>\n        <button\n          className={css.deleteBtn}\n          onClick={() => onDeleteContact(id)}\n          type=\"button\"\n        >\n          <ImCancelCircle className={css.icon} />\n        </button>\n      </li>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contactsSelectors';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectVisibleContacts);\n\n  if (!filteredContacts) {\n    return <p>Not found contacts</p>;\n  }\n  return (\n    <ul className={css.list}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return <ContactItem key={id} id={id} name={name} number={number} />;\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\",\"title\":\"ContactForm_title__jZguf\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsThunks';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    let newContact = {\n      name: name.value,\n      number: number.value,\n    };\n    isAddedContact(newContact);\n    name.value = '';\n    number.value = '';\n  };\n\n  const isAddedContact = newContact => {\n    const { name } = newContact;\n    const addedName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (addedName) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n\n  return (\n    <div>\n      <h3 className={css.title}>Please, add contact</h3>\n      <form onSubmit={handleSubmitForm} className={css.form}>\n        <label className={css.label}>Name</label>\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n        />\n        <label>Phone number</label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n        />\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"inputWrapper\":\"Filter_inputWrapper__-FNL8\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/slices/filterSlice';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(filterContact(e.target.value));\n  };\n  return (\n    <div className={css.inputWrapper}>\n      <h3>Find contact by name:</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Find contact\"\n        onChange={handleChangeFilter}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm ';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/contactsThunks';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { FallingLines } from 'react-loader-spinner';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <ContactForm />\n      <div>\n        {isLoading && (\n          <FallingLines\n            color=\"#4fa94d\"\n            width=\"100\"\n            visible={true}\n            ariaLabel=\"falling-lines-loading\"\n          />\n        )}\n      </div>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","IsLoading","selectFilter","filter","selectVisibleContacts","createSelector","name","toLowerCase","includes","ContactItem","id","number","dispatch","useDispatch","className","css","onClick","deleteContact","onDeleteContact","type","ContactList","filteredContacts","useSelector","map","ContactForm","isAddedContact","newContact","find","contact","alert","addContact","onSubmit","e","preventDefault","target","elements","value","pattern","title","required","placeholder","Filter","onChange","filterContact","isLoading","useEffect","fetchContacts","color","width","visible","ariaLabel"],"sourceRoot":""}